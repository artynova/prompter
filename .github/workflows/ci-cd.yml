name: Prompter CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    permissions:
      contents: write
      checks: write
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.6

      # generates all analysis results
      - name: Run check
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: check

      - name: Save Sonarlint results
        uses: jwgmeligmeyling/spotbugs-github-action@v1.2
        with:
          path: './build/reports/sonarlint/*.xml'
          name: Sonarlint
          title: Sonarlint analysis results

      - name: Save Checkstyle results
        uses: jwgmeligmeyling/checkstyle-github-action@v1.2
        with:
          path: './build/reports/checkstyle/*.xml'
          name: Checkstyle
          title: Checkstyle analysis results
          
      - name: Save JUnit results
        uses: mikepenz/action-junit-report@v3
        with:
          check_name: JUnit
          report_paths: '**/build/test-results/test/TEST-*.xml'
          
      # check whether failure reports in any part of the analysis exist
      # if yes, exit with code 1 (fail the build)
      - name: Check analysis results
        run: |
          if grep -q '<failure' ./build/test-results/test/TEST-*.xml || \
             grep -q '<error' ./build/reports/sonarlint/*.xml || \
             grep -q '<error' ./build/reports/checkstyle/*.xml; then
            echo "Analysis failures detected."
            exit 1
          else
            echo "No analysis failures detected."
          fi
      
      # also packages the artifact into a jar for publishing
      - name: Publish artifact
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: assemble publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
